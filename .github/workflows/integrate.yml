---

on:  # yamllint disable-line rule:truthy
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

name: 🔍 Continuous integration

jobs:
  commit-linting:
    timeout-minutes: 4
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    steps:
      - name: 📦 Check out the codebase
        uses: actions/checkout@v4.1.3

      - name: 🧐 Lint commits using "commitlint"
        uses: wagoid/commitlint-github-action@v6.0.1
        with:
          configFile: ${{ github.workspace }}/.github/.commitlint.config.mjs
          failOnWarnings: false
          failOnErrors: false
          helpURL: 'https://github.com/conventional-changelog/commitlint/#what-is-commitlint'

  markdown-linting:
    timeout-minutes: 4
    runs-on: ubuntu-latest
    concurrency:
      cancel-in-progress: true
      group: markdown-linting-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    steps:
      - name: 📦 Check out the codebase
        uses: actions/checkout@v4.1.3

      - name: 🧐 Lint Markdown files
        uses: DavidAnson/markdownlint-cli2-action@v16.0.0
        with:
          globs: |
            **/*.md
            !CHANGELOG.md

  code-coverage:
    timeout-minutes: 4
    runs-on: ${{ matrix.os }}
    concurrency:
      cancel-in-progress: true
      group: code-coverage-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest
        php-version:
          - '8.2'
        dependencies:
          - locked
    steps:
      - name: 📦 Check out the codebase
        uses: actions/checkout@v4.1.3

      - name: 🛠️ Setup PHP
        uses: shivammathur/setup-php@2.30.3
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, pdo, pdo_sqlite
          ini-values: error_reporting=E_ALL
          coverage: xdebug

      - name: 🛠️ Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: 🤖 Validate composer.json and composer.lock
        run: composer validate --ansi --strict

      - name: 🔍 Get composer cache directory
        uses: wayofdev/gh-actions/actions/composer/get-cache-directory@v3.0.0

      - name: ♻️ Restore cached dependencies installed with composer
        uses: actions/cache@v4.0.2
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}
          restore-keys: php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-

      - name: 📥 Install "${{ matrix.dependencies }}" dependencies
        uses: wayofdev/gh-actions/actions/composer/install@v3.0.0
        with:
          dependencies: ${{ matrix.dependencies }}

      - name: 🧪 Collect code coverage with Xdebug and phpunit/phpunit
        run: composer test:cc

      - name: 📤 Upload code coverage report to Codecov
        uses: codecov/codecov-action@v4.3.0
        with:
          files: .build/phpunit/logs/clover.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

  coding-standards:
    timeout-minutes: 4
    runs-on: ${{ matrix.os }}
    concurrency:
      cancel-in-progress: true
      group: coding-standards-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest
        php-version:
          - '8.2'
        dependencies:
          - locked
    steps:
      - name: 📦 Check out the codebase
        uses: actions/checkout@v4.1.3

      - name: 🧐 Lint YAML files
        uses: ibiqlik/action-yamllint@v3.1.1
        with:
          config_file: .yamllint.yaml
          file_or_dir: '.'
          strict: true

      - name: 🛠️ Setup PHP
        uses: shivammathur/setup-php@2.30.3
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, pdo, pdo_sqlite
          ini-values: error_reporting=E_ALL
          coverage: xdebug

      - name: 🛠️ Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - name: 🤖 Validate composer.json and composer.lock
        run: composer validate --ansi --strict

      - name: 🔍 Get composer cache directory
        uses: wayofdev/gh-actions/actions/composer/get-cache-directory@v3.0.0

      - name: ♻️ Restore cached dependencies installed with composer
        uses: actions/cache@v4.0.2
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}
          restore-keys: php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-

      - name: 📥 Install "${{ matrix.dependencies }}" dependencies
        uses: wayofdev/gh-actions/actions/composer/install@v3.0.0
        with:
          dependencies: ${{ matrix.dependencies }}

      - name: 🛠️ Prepare environment
        run: make prepare

      - name: 🚨 Run coding standards task
        run: composer cs:diff
        env:
          PHP_CS_FIXER_IGNORE_ENV: true

  dependency-analysis:
    timeout-minutes: 4
    runs-on: ${{ matrix.os }}
    concurrency:
      cancel-in-progress: true
      group: dependency-analysis-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest
        php-version:
          - '8.2'
        dependencies:
          - locked
    steps:
      - name: 📦 Check out the codebase
        uses: actions/checkout@v4.1.3

      - name: 🛠️ Setup PHP
        uses: shivammathur/setup-php@2.30.3
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, json, curl, dom, xml, phar
          ini-values: error_reporting=E_ALL
          coverage: none
          tools: phive

      - name: 🛠️ Setup problem matchers
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - name: 🤖 Validate composer.json and composer.lock
        run: composer validate --ansi --strict

      - name: 🔍 Get composer cache directory
        uses: wayofdev/gh-actions/actions/composer/get-cache-directory@v3.0.0

      - name: ♻️ Restore cached dependencies installed with composer
        uses: actions/cache@v4.0.2
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}
          restore-keys: php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-

      - name: 📥 Install "${{ matrix.dependencies }}" dependencies
        uses: wayofdev/gh-actions/actions/composer/install@v3.0.0
        with:
          dependencies: ${{ matrix.dependencies }}

      - name: 📥 Install dependencies with phive
        uses: wayofdev/gh-actions/actions/phive/install@v3.0.0
        with:
          phive-home: '.phive'
          trust-gpg-keys: '0x033E5F8D801A2F8D'

      - name: 🔬 Run maglnet/composer-require-checker
        run: .phive/composer-require-checker check --ansi --config-file="$(pwd)/composer-require-checker.json" --verbose

  mutation-testing:
    timeout-minutes: 16
    runs-on: ${{ matrix.os }}
    concurrency:
      cancel-in-progress: true
      group: mutation-testing-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest
        php-version:
          - '8.2'
        dependencies:
          - locked
    steps:
      - name: 📦 Check out the codebase
        uses: actions/checkout@v4.1.3

      - name: 🛠️ Setup PHP
        uses: shivammathur/setup-php@2.30.3
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, pdo, pdo_sqlite
          ini-values: error_reporting=E_ALL
          coverage: xdebug

      - name: 🛠️ Setup problem matchers
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - name: 🤖 Validate composer.json and composer.lock
        run: composer validate --ansi --strict

      - name: 🔍 Get composer cache directory
        uses: wayofdev/gh-actions/actions/composer/get-cache-directory@v3.0.0

      - name: ♻️ Restore cached dependencies installed with composer
        uses: actions/cache@v4.0.2
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}
          restore-keys: php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-

      - name: 📥 Install "${{ matrix.dependencies }}" dependencies
        uses: wayofdev/gh-actions/actions/composer/install@v3.0.0
        with:
          dependencies: ${{ matrix.dependencies }}

      - name: 🧪 Run mutation testing using Xdebug and infection/infection
        run: composer infect:ci
        env:
          STRYKER_DASHBOARD_API_KEY: ${{ secrets.STRYKER_DASHBOARD_API_KEY }}

  security-analysis:
    timeout-minutes: 4
    runs-on: ${{ matrix.os }}
    concurrency:
      cancel-in-progress: true
      group: security-analysis-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest
        php-version:
          - '8.2'
        dependencies:
          - locked
    steps:
      - name: 📦 Check out the codebase
        uses: actions/checkout@v4.1.3

      - name: 🛠️ Setup PHP
        uses: shivammathur/setup-php@2.30.3
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, pdo, pdo_sqlite
          ini-values: error_reporting=E_ALL
          coverage: none

      - name: 🛠️ Setup problem matchers
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - name: 🤖 Validate composer.json and composer.lock
        run: composer validate --ansi --strict

      - name: 🔍 Get composer cache directory
        uses: wayofdev/gh-actions/actions/composer/get-cache-directory@v3.0.0

      - name: ♻️ Restore cached dependencies installed with composer
        uses: actions/cache@v4.0.2
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}
          restore-keys: php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-

      - name: 📥 Install "${{ matrix.dependencies }}" dependencies
        uses: wayofdev/gh-actions/actions/composer/install@v3.0.0
        with:
          dependencies: ${{ matrix.dependencies }}

      - name: 🐛 Check installed packages for security vulnerability advisories
        run: composer audit --ansi

  static-analysis:
    timeout-minutes: 4
    runs-on: ${{ matrix.os }}
    concurrency:
      cancel-in-progress: true
      group: static-analysis-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest
        php-version:
          - '8.2'
        dependencies:
          - locked
    steps:
      - name: 📦 Check out the codebase
        uses: actions/checkout@v4.1.3

      - name: 🛠️ Setup PHP
        uses: shivammathur/setup-php@2.30.3
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, pdo, pdo_sqlite
          ini-values: error_reporting=E_ALL
          coverage: none

      - name: 🛠️ Setup problem matchers
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - name: 🤖 Validate composer.json and composer.lock
        run: composer validate --ansi --strict

      - name: 🔍 Get composer cache directory
        uses: wayofdev/gh-actions/actions/composer/get-cache-directory@v3.0.0

      - name: ♻️ Restore cached dependencies installed with composer
        uses: actions/cache@v4.0.2
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}
          restore-keys: php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-

      - name: 📥 Install "${{ matrix.dependencies }}" dependencies
        uses: wayofdev/gh-actions/actions/composer/install@v3.0.0
        with:
          dependencies: ${{ matrix.dependencies }}

      - name: 🔍 Run static analysis using phpstan
        run: composer stan:ci

  testing:
    timeout-minutes: 4
    runs-on: ${{ matrix.os }}
    concurrency:
      cancel-in-progress: true
      group: testing-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-${{ matrix.php-version }}-${{ matrix.dependencies }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest
        php-version:
          - '8.2'
          - '8.3'
        dependencies:
          - lowest
          - locked
          - highest
    steps:
      - name: 📦 Check out the codebase
        uses: actions/checkout@v4.1.3

      - name: 🛠️ Setup PHP
        uses: shivammathur/setup-php@2.30.3
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, pdo, pdo_sqlite
          ini-values: error_reporting=E_ALL
          coverage: none

      - name: 🛠️ Setup problem matchers
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - name: 🤖 Validate composer.json and composer.lock
        run: composer validate --ansi --strict

      - name: 🔍 Get composer cache directory
        uses: wayofdev/gh-actions/actions/composer/get-cache-directory@v3.0.0

      - name: ♻️ Restore cached dependencies installed with composer
        uses: actions/cache@v4.0.2
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}
          restore-keys: php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-

      - name: ⚙️ Remove platform configuration with composer
        if: matrix.dependencies != 'locked'
        run: composer config platform.php --ansi --unset

      - name: 📥 Install "${{ matrix.dependencies }}" dependencies
        uses: wayofdev/gh-actions/actions/composer/install@v3.0.0
        with:
          dependencies: ${{ matrix.dependencies }}

      - name: 🧪 Run tests using phpunit/phpunit
        run: php vendor/bin/pest

  refactoring:
    timeout-minutes: 4
    runs-on: ${{ matrix.os }}
    concurrency:
      cancel-in-progress: true
      group: refactoring-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest
        php-version:
          - '8.2'
        dependencies:
          - locked
    steps:
      - name: 📦 Check out the codebase
        uses: actions/checkout@v4.1.3

      - name: 🛠️ Setup PHP
        uses: shivammathur/setup-php@2.30.3
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, pdo, pdo_sqlite
          ini-values: error_reporting=E_ALL
          coverage: none

      - name: 🛠️ Setup problem matchers
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - name: 🤖 Validate composer.json and composer.lock
        run: composer validate --ansi --strict

      - name: 🔍 Get composer cache directory
        uses: wayofdev/gh-actions/actions/composer/get-cache-directory@v3.0.0

      - name: ♻️ Restore cached dependencies installed with composer
        uses: actions/cache@v4.0.2
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}
          restore-keys: php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-

      - name: 📥 Install "${{ matrix.dependencies }}" dependencies
        uses: wayofdev/gh-actions/actions/composer/install@v3.0.0
        with:
          dependencies: ${{ matrix.dependencies }}

      - name: ⚙️ Run automated refactoring with rector/rector
        run: composer refactor:ci

...
